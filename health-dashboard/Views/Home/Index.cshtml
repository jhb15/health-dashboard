@{
    ViewData["Title"] = "Dashboard";
}

@{
    Dictionary<int, string> ActivityTypeStrings = new Dictionary<int, string>();
    foreach (var at in Model.ActivityTypes)
    {
        ActivityTypeStrings.Add(at.Id, at.Name);
    }
}

@if (Model.HealthDataRepositoryConnectionSuccessful)
{
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body">
                    <h1 class="box-title">Your Steps <small>By Day </small></h1>
                </div>
                <div class="card-body">
                    <div class="chart-container">
                        <canvas id="stepsChart"></canvas>
                    </div>
                </div>
                <div class="clearfix"></div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="@(Model.FitBitIngestConnectionSuccessful ? "col-xl-9 col-lg-8 col-md-6" : "col-lg-12")">
            <div class="card">
                <div class="card-body">
                    @if (Model.HasActivities)
                    {
                        <canvas id="distanceChart"></canvas>
                    } else
                    {
                        <p>You have no activities. Would you a like to <a href="@Url.Action("Input", "Home")">add one</a>?</p>
                    }
                </div>
            </div>
        </div>
        @if (Model.FitBitIngestConnectionSuccessful)
        {
            <div class="col-xl-3 col-lg-4 col-md-6">
                <div class="card">
                    <div class="card-body text-center">
                        <div style="height: 100px">
                            @if (!Model.IsFitBitConnected)
                            {
                                <a href="@Model.FitBitConnectUrl" style="white-space: normal;" class="btn btn-success align-middle">Connect your FitBit</a>
                            }
                            else
                            {
                                <a href="@Model.FitBitDisconnectUrl" style="white-space: normal;" class="btn btn-success align-middle">Disconnect your FitBit</a>
                            }
                            <p>This may take up to an hour to update.</p>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="row">

        <div class="col-md-4 col-sm-4 col-xs-12">
            <div class="card">
                <div class="card-body">
                    <h1 class="box-title">Record Steps</h1>
                    <div class="clearfix"></div>
                </div>
                <div class="card-body">
                    <div class="activity-form-message"></div>
                    @foreach (var at in Model.ActivityTypes)
                    {
                        if (at.Name == "Steps")
                        {
                            <form class="ajax-form-activity" method="post" action="#">
                                <input type="hidden" name="start-time" value="@DateTime.Now.ToString("yyyy-MM-dd")">
                                <input type="hidden" name="end-time" value="@DateTime.Now.ToString("yyyy-MM-dd")">
                                <input type="hidden" name="activity-type" value="@at.Id">
                                <div class="form-group">
                                    <label class="form-control-label" for="date">Date</label>
                                    <input class="form-control" type="date" id="date" value="@DateTime.Now.ToString("yyyy-MM-dd")">
                                </div>
                                <div class="form-group">
                                    <label class="form-control-label" for="steps-taken">Number of Steps</label>
                                    <input class="form-control" type="number" id="steps-taken" name="steps-taken" min="0" step="1" required="required">
                                </div>
                                <div class="form-actions form-group">
                                    <button type="submit" class="btn btn-success btn-sm">Submit</button>
                                </div>
                            </form>
                            break; // out of foreach
                        }
                    }
                </div>
            </div>
        </div>
        @if (Model.ChallengesConnectionSuccessful)
        {
            <div class="col-md-4 col-sm-4 col-xs-12">
                <div class="card">
                    <div class="card-body">
                        <h1 class="box-title">Your Group Challenges</h1>
                        <div class="clearfix"></div>
                    </div>
                    <div class="card-body">
                        @if (Model.Challenges.Count == 0)
                        {
                            <div class="">
                                <span>You currently have no group challenges.</span>
                            </div>
                            <div class="">
                                <span>If you are part of a group, would you like to <a href="@Model.ChallengeJoinUrl">join a challenge</a>?</span>
                            </div>
                            <div class="">
                                <span>If you are not part of a group, would you like to <a href="@Model.UserGroupsJoinUrl">join a group</a>?</span>
                            </div>
                            <br />
                        }
                        @foreach (var ch in Model.Challenges)
                        {
                            <div class="">
                                <span>@ch.challenge.goal @ch.challenge.GoalMetric.GoalMetricDisplay while @ch.challenge.activity.activityName</span>
                            </div>
                            <div class="progress">
                                <div class="progress-bar bg-green" role="progressbar" aria-valuenow="@ch.percentageComplete" aria-valuemin="0" aria-valuemax="100" style="width: @ch.percentageComplete%;">
                                    <span class="sr-only">@ch.percentageComplete% Complete</span>
                                </div>
                            </div>
                            <div>
                                <span>@ch.percentageComplete% Complete </span>
                            </div>
                            <div>
                                <span>until @ch.challenge.endDateTime.ToString("dd/MM/yyyy HH:mm:ss")</span>
                            </div>
                            <br />
                            <div class="clearfix"></div>
                        }
                        <div class="form-actions form-group">
                            <a href="@Model.ChallengeJoinUrl" class="btn btn-success">Join a Challenge</a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4 col-sm-4 col-xs-12">
                <div class="card">
                    <div class="card-body">
                        <h1 class="box-title">Your Personal Goals</h1>
                        <div class="clearfix"></div>
                    </div>
                    <div class="card-body">
                        @if (Model.Goals.Count == 0)
                        {
                            <div class="">
                                <span>You currently have no personal goals.</span>
                            </div>
                            <div class="">
                                <span>Would you like to <a href="@Url.Action("Goals","Home")">make one</a>?</span>
                            </div>
                            <br />
                        }
                        @foreach (var g in Model.Goals)
                        {
                            <div class="">
                                <span>@g.challenge.goal @g.challenge.GoalMetric.GoalMetricDisplay of @g.challenge.activity.activityName</span>
                            </div>
                            <div class="progress">
                                <div class="progress-bar bg-green" role="progressbar" aria-valuenow="@g.percentageComplete" aria-valuemin="0" aria-valuemax="100" style="width: @g.percentageComplete%;">
                                    <span class="sr-only">@g.percentageComplete% Complete</span>
                                </div>
                            </div>
                            <div>
                                <span>@g.percentageComplete% Complete</span>
                            </div>
                            <div>
                                <span>until @g.challenge.endDateTime.ToString("dd/MM/yyyy HH:mm:ss")</span>
                            </div>
                            <br />
                            <div class="clearfix"></div>
                        }
                        <div class="form-actions form-group">
                            <a href="@Url.Action("Goals", "Home")" class="btn btn-success">New Goal</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.3/Chart.bundle.min.js" integrity="sha256-MZo5XY1Ah7Z2Aui4/alkfeiq3CopMdV/bbkc/Sh41+s=" crossorigin="anonymous"></script>
    <script>
        window.onload = function () {
            jQuery(document).ready(function () {
                (function () {
                    var ctx = document.getElementById("stepsChart");
                    ctx.height = 200;
                    var myChart = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: [
                                @foreach (KeyValuePair<DateTime, List<HealthActivity>> day in Model.ActivitiesByDate)
                                {
                                    @Html.Raw(string.Concat('"', day.Key.ToString("dd-MM-yyyy"), "\","));
                                }
                            ],
                            datasets: [{
                                label: '# of Steps',
                                data: [
                                    @{
                                        foreach (KeyValuePair<DateTime, List<HealthActivity>> day in Model.ActivitiesByDate)
                                        {
                                            var stepCount = 0;
                                            foreach (HealthActivity ha in day.Value)
                                            {
                                                stepCount += ha.stepsTaken;
                                            }
                                            @Html.Raw(string.Concat(stepCount, ','));
                                        }
                                    }
                                ],
                                backgroundColor: [
                                    'rgba(255, 99, 132, 0.2)',
                                ],
                                borderColor: [
                                    'rgba(255,99,132,1)',
                                ],
                                borderWidth: 1
                            }]
                        },
                        options: {
                            maintainAspectRatio: false,
                            scales: {
                                yAxes: [{
                                    ticks: {
                                        beginAtZero: true
                                    }
                                }]
                            }
                        }
                    });
                })();

                (function () {
                    if (jQuery('#distanceChart').length == 1) {
                        var ctx = document.getElementById("distanceChart");
                        ctx.height = 100;
                        var myChart = new Chart(ctx, {
                            type: 'horizontalBar',
                            data: {
                                labels: ["Distance (m)"],

                                datasets: [
                                @{ var rand = new Random();}
                                @foreach (KeyValuePair<int, double> distance in Model.Distances)
                                {
                                    @:{
                                        @:data: [@distance.Value],
                                        @:backgroundColor: "rgba(" + @rand.Next(0, 255) + "," + @rand.Next(0, 255) + "," + @rand.Next(0, 255) + ")",
                                        @:label: "@ActivityTypeStrings[distance.Key]"
                                    @:},
                                }
                                ]
                            },
                            options: {
                                maintainAspectRatio: false,
                                tooltips: {
                                    enabled: false
                                },
                                hover: {
                                    animationDuration: 0
                                },
                                scales: {
                                    xAxes: [{
                                        ticks: {
                                            beginAtZero: true,
                                            fontFamily: "'Open Sans Bold', sans-serif",
                                            fontSize: 11
                                        },
                                        scaleLabel: {
                                            display: false
                                        },
                                        gridLines: {
                                        },
                                        stacked: true
                                    }],
                                    yAxes: [{
                                        gridLines: {
                                            display: false,
                                            color: "#fff",
                                            zeroLineColor: "#fff",
                                            zeroLineWidth: 0
                                        },
                                        ticks: {
                                            fontFamily: "'Open Sans Bold', sans-serif",
                                            fontSize: 11
                                        },
                                        stacked: true
                                    }]
                                },

                                pointLabelFontFamily: "Quadon Extra Bold",
                                scaleFontFamily: "Quadon Extra Bold",
                            }
                        });
                    }
                })();

                (function () {
                    jQuery('form.ajax-form-activity').submit(function (event) {
                        event.preventDefault();
                        var form = jQuery('form.ajax-form-activity')

                        if (/^[0-9.]*$/.exec(form.find('#steps-taken').val())) {
                            var datetime = form.find('#date').val() + "T00:00:00";
                            form.find('[name=start-time]').val(datetime);
                            form.find('[name=end-time]').val(datetime);

                            jQuery.ajax({
                                type: 'POST',
                                url: '@Url.Action("InputAjax", "Home")',
                                data: form.serialize(),
                                success: function (data, textStatus, jqXHR) {
                                    jQuery('.activity-form-message').html("<p>Steps recorded successfully. Refreshing the page...</p>");
                                    setTimeout(function () {
                                        window.location.reload();
                                    }, 2500);
                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                    jQuery('.activity-form-message').html("<p>Steps save failed. Please contact a coordinator or an administrator.</p>");
                                }
                            });
                        } else {
                            jQuery('.activity-form-message').html("<p>Steps Taken must be a number.</p>");
                        }
                    });
                })();
            });
        };
    </script>
}
else
{
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body">
                    <h3>Apologies, but the Health Dashboard is currently unavailable.</h3>
                </div>
            </div>
        </div>
    </div>
}
